# Полёты на Марс с участием человека уже не за горами. Команда для полёта почти сформирована. Осталось одно свободное место и масса претендентов на него.
# Для решения этой задачи создан проект С.Ч.И.Т.А.Л.К.А. — Стандартный Числовой Иррационально-Точный АЛгоритм Кастинга Астронавтов.
# На практике алгоритм реализуется так:
# Группа претендентов выстраивается в круг. Число претендентов обозначим через N, претенденты получают номера от 1 до N.
# Претенденты получают лист бумаги, на котором написана считалка. Считалка состоит из определённого количества «ритмических частей», тактов. Число тактов обозначим через K.
# Претендент под номером 1 произносит вслух считалку и, начиная с себя, на каждый такт указывает на каждого из претендентов. Тот, на ком считалка закончилась, выбывает из числа претендентов.
# Участник, следующий за выбывшим, вновь начинает произносить считалку, начав с себя и указывая последовательно на оставшихся претендентов.
# Отсев продолжается до тех пор, пока не останется только один претендент — именно он и войдёт в команду.
# Посмотрим, как это сработает на примере считалки из 16 тактов для группы из 5 человек. 
# Считалка разбита на такты символом |, а над каждым тактом стоит цифра от 1 до 5: она обозначает, на кого именно показывает ведущий в процессе счёта.
#  1          2          3      4 
# десять, | девять, | восемь, | семь
# 5      1         2       3 
# В кора|бле | нет места | всем
# 4        5          1     2
# Тот, | кто плохо | кашу | ел
# 3     4      5     1
# Нику|да | не поле|тел!

# Претендент под номером 1 выбывает. 
# Считать начинает претендент, следующий за выбывшим, его номер - 2, он начинает с себя:

# 2          3          4         5
# Десять, | девять, | восемь, | семь
# 2       3       4         5
# В кора|бле | нет места | всем
# 2        3          4      5
# Тот, | кто плохо | кашу | ел
# 2     3     4      5
# Нику|да | не поле|тел!

# Претендент под номером 5 выбывает. 
# Считать начинает претендент, следующий за выбывшим.
# И так до последнего претендента.

# В считалке может быть от 1 до 500 ритмических шагов.
# Эни | бени | аппер | боттом
# Не | бывать | тебе | пилотом!
# В кастинге может принимать участие от 1 до 500 претендентов.
# Таким образом,
# N — любое положительное число от 1 до 500.
# K — любое положительное число от 1 до 500.
# Задачу можно решить в цикле или рекурсивно — любой из этих способов подойдёт. Если же вы сможете выполнить задание и тем и другим способом, это будет высший пилотаж.

# Формат ввода
# Первая строка — целое число от 1 до 500, количество претендентов.
# Вторая строка — целое число от 1 до 500, количество тактов в считалке.

# Формат вывода
# Целое число — номер победившего претендента.
def schitalochka(n, k):
    n_list = list(range(1, n+1))
    current_index = 1
    print(n_list)
    while n > 1:
        k_reduced = k % len(n_list) if k != len(n_list) else k
        if k_reduced > len(n_list) - current_index + 1:
            if current_index == len(n_list)+1:
                current_index = 1
            elif k_reduced - (len(n_list) - current_index + 1) > 0:
                current_index = k_reduced - (len(n_list) - current_index + 1)
            print(f'удаляется {n_list[current_index-1]}, текущий индекс {current_index}')
            list.remove(n_list, n_list[current_index-1])
            print(n_list)
        else:
            current_index = current_index + k_reduced - 1
            print(f'удаляется {n_list[current_index-1]}')
            list.remove(n_list, n_list[current_index-1])
            print(n_list)
        n = len(n_list)
    return n_list[0]

            

n = 5 #int(input())
k = 5 #int(input())

print(schitalochka(n, k))
