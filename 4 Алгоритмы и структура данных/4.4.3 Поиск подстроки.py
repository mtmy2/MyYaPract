# Марсоход должен исследовать странные каменные структуры: на поверхности скал обнаружена последовательность символов. 
# Предположительно, эту последовательность создали разумные существа. Учёные предполагают, что эта последовательность содержит некие коды или тексты.
# Для расшифровки необходимо выявить в последовательности самую длинную подстроку, состоящую из уникальных символов: 
# наибольший ряд символов, в котором каждый символ встречается только один раз. 
# Это поможет найти ключ к разгадке послания или просто даст понять, случайны ли эти символы, или в них есть порядок.
# Напишите программу, которая принимает на вход строку и находит в ней наибольшую длину подстроки, 
# в которой нет повторяющихся символов. Программа должна вернуть натуральное число — длину этой подстроки.
# Используйте метод скользящего окна для решения задачи. 
# Если в строке встретится дубликат, запомните длину получившейся подстроки и начинайте строить окно заново.
# 
# Формат ввода
# Одна строка, состоящая из строчных латинских букв. Длина строки не превосходит 10 000 символов.
# 
# Формат вывода
# Натуральное число — длина наибольшей подстроки с уникальными символами.


def find_max_uniq_string(string):
    #string_list = str.split(string)
    max_lenght = 1
    for left_letter in range(len(string)):
        window = string[left_letter]
        for right_letter in range(left_letter+1, len(string)):
            if string[right_letter] not in window:
                window += string[right_letter]
                max_lenght = max(max_lenght, len(window))
            else:
                window_new_start = str.index(window, string[right_letter])
                window = window[window_new_start+1:] + string[right_letter]
        return max_lenght



string = 'abcabcbb'
#string = input().split()

answer = find_max_uniq_string(string)
print(answer) 

#print(' '.join(answer))
#with open('output.txt', 'w') as file_out:
#        file_out.write(answer)