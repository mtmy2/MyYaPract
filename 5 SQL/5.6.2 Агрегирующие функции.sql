Вот основные агрегирующие функции в SQL:
SUM(столбец) — возвращает сумму значений в поле (столбце);
AVG(столбец) — находит среднее арифметическое для значений в поле (столбце);
MIN(столбец) — возвращает минимальное значение в поле (столбце);
МАХ(столбец) — возвращает максимальное значение в поле (столбце);
COUNT(столбец) — выводит количество записей в поле (столбце).
Например, с помощью этих операторов можно посчитать суммарную выручку, а также найти самый маленький и самый крупный заказы в базе данных онлайн-магазина:

SELECT SUM(total), MIN(total), MAX(total) FROM chinook.invoice; 


Агрегирующие функции можно сочетать с математическими, например, чтобы округлить среднюю сумму заказа до двух чисел после запятой.

SELECT ROUND(AVG(total), 2) FROM chinook.invoice; 


Функцию COUNT, в отличие от других, можно использовать и для всей таблицы. 

-- так считают записи в таблице
SELECT COUNT(*) FROM chinook.invoice; 


Агрегирующие функции можно сочетать с ключевым словом DISTINCT, которое убирает дубликаты значений. Например, можно посчитать только уникальные значения по отдельному столбцу. Здесь пригодится функция COUNT.

SELECT COUNT(DISTINCT billing_country) 
FROM chinook.invoice; 


5.
Посчитайте количество альбомов, в которых встречаются треки в жанре Jazz.
SELECT COUNT(DISTINCT album_id) 
FROM chinook.track AS t
INNER JOIN chinook.genre AS g USING (genre_id)
WHERE 
    g.name = 'Jazz'



6.
Проверьте, какую выручку в среднем приносит каждый покупатель. Выгрузите общую сумму выручки, 
число уникальных покупателей (поле customer_id) и среднюю выручку на уникального пользователя для страны США.

SELECT SUM(total), COUNT(DISTINCT customer_id), SUM(total)/COUNT(DISTINCT customer_id) -- добавьте агрегирующую функцию
FROM chinook.invoice
WHERE billing_country = 'USA';