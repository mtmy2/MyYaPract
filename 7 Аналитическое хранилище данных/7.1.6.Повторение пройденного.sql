Повторение пройденного
Первый шаг в новом спринте уже сделан — поздравляем! Вы изучили различия реляционных и нереляционных баз данных, узнали об отличиях СУБД PostgreSQL и подготовили инструменты для дальнейшей работы.
В конце темы вы можете вспомнить основные теоретические моменты из пройденных уроков для закрепления. Можете повторить характеристики SQL и NoSQL баз данных и особенности PostgreSQL или сразу переходить к следующей теме.
SQL и NoSQL базы данных
По способу структурирования, хранения и управления данными все БД можно разделить на два основных типа: реляционные (SQL) и нереляционные (NoSQL). Первые предназначены для хранения структурированных данных, вторые — для неструктурированных и полуструктурированных. Ещё раз приведём таблицу-шпаргалку по каждому из этих видов данных:
Структурированные	Неструктурированные	Полуструктурированные
Определение	Данные строго упорядочены по заранее заданной модели	Данные не упорядочены	Данные содержат определённые теги для разделения семантических элементов и реализации иерархии
Форматы хранения	XLSX, CSV	WAV, MP3, Ogg, MP4, WMV, JPEG, PNG	XML, JSON, YAML
СУБД	MySQL, Oracle, PostgreSQL	Amazon S3, Neo4j	Amazon S3, MongoDB, HBase, Cassandra, PostgreSQL, Neo4j
Методы анализа данных	Классификация, регрессия, кластеризация	Накопление, интеллектуальный анализ данных	Классификация, регрессия, кластеризация, накопление, интеллектуальный анализ данных
В реляционных БД информация хранится в табличном виде: столбцы содержат свойства объектов, строки — саму информацию об объектах. Связь между таблицами обеспечивается механизмом внешнего ключа. Для обращения к данным реляционные БД используют SQL-запросы.
Нереляционные БД используют отличные от SQL запросы. Эти БД имеют разные модели хранения, каждая из которых оптимизирована под конкретный тип данных. Вот наиболее популярные:
«ключ–значение» — хранят данные в виде совокупности пар «ключ–значение», чаще всего применяется для хранения изображений и в качестве кешей для объектов;
документоориентированные — работают со сгруппированными по коллекциям полуструктурированными документами, подходят для каталогов и систем управления контентом;
графовые — хранят данные в виде узлов и рёбер (связей), подходят для ориентированных на связи задач;
колоночные — полезны для организации счётчиков, регистрации и обработки событий, связанных со временем, так как имеют временные метки.
Особенности PostgreSQL
У PostgreSQL множество полезных для хранения и анализа данных характеристик:
Открытый исходный код даёт возможность настраивать базу под конкретные задачи.
За локальную версию PostgreSQL платить не нужно, только за её размещение в облачном хранилище.
PostgreSQL — объектно-реляционная БД. Она поддерживает пользовательские объекты.
PostgreSQL хорошо работает со сложными структурами данных, которые стандартные реляционные СУБД не поддерживают (сетевые адреса, данные в формате JSON и XML, геометрические данные, многомерные массивы и др.).
У PostgreSQL есть свой диалект языка SQL — PL/pgSQL. С его помощью можно создавать хранимые процедуры, триггеры, функции и другие объекты базы данных. Кроме того, он позволяет выполнять некоторые действия в базе с помощью более простых и коротких запросов, в отличие от классического SQL.

PostgreSQL поддерживает и другие диалекты SQL. Например, SQL/JSON и SQL/XML.
PostgreSQL соответствует требованиям ACID.
PostgreSQL поддерживает все современные функции (триггеры, вложенные транзакции и оконные функции).
Теперь точно можно переходить к следующей теме. Там вас ждут нормальные формы. Причём не одна, не две, а целых шесть!