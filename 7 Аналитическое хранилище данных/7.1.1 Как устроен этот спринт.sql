Как устроен этот спринт
Добро пожаловать в команду!
Вы только что устроились на позицию стажёра инженера данных в небольшую компанию. Это интернациональный маркетплейс товаров ручного производства. Компания молодая и ещё не обзавелась продуманной стратегией работы с данными, из-за чего в них наблюдается некоторый хаос (например, много дублей и пустых значений). Такими данными очень сложно управлять, а также их сложно анализировать.
Именно поэтому было решено нанять опытного техлида и несколько стажёров для построения собственного хранилища данных (DWH).
Перед любым строительством нужно заложить хороший фундамент — этим вы и займётесь в первом спринте. Вам предстоит:
познакомиться с технологиями, с которыми вы будете работать в дальнейшем;
изучить реляционные базы данных и их нормальные формы;
узнать, что нормальные формы не всесильны — и тогда на помощь приходит DWH;
разобраться в различиях OLTP и OLAP;
познакомиться с витринами данных (data mart);
изучить различные подходы к построению хранилищ (Inmon, Kimball, Data Vault, якорная модель, «Звезда», «Снежинка»);
получить детальную постановку задачи от техлида;
выбрать лучший подход для поставленной задачи;
познакомиться с медленно меняющимися измерениями (Slowly Changing Dimensions, SCD).
В конце первого спринта вы завершите построение модели и будете готовы к загрузке данных в хранилище (но об этом уже в следующем спринте).
Первый спринт рассчитан на две недели, в течение которых вы изучите теорию и попрактикуетесь на задачах от техлида. Так как здесь речь пойдет о самых основах работы с хранилищами, к проекту вы пока не приступите, но для закрепления знаний пройдете обширный тест по изученным темам.
Какие технологии будут использованы
Если продолжить аналогию со строительством, то на протяжении всего спринта вам понадобятся материалы и инструменты.
В качестве «материала» — базы данных для хранилища маркетплейса, была выбрана объектно-реляционная СУБД PostgreSQL. Почему именно она? Об этом вы узнаете во второй теме.
Также вам предстоит использовать клиентское приложение DBeaver для взаимодействия с базой и управления ей. Это «чемоданчик с инструментами». Если вы когда-нибудь пользовались терминальными клиентами, то знаете, что в них не всегда удобно писать сложные запросы или работать с большим набором атрибутов. Для удобной работы с кодом в редакторе, просмотра структуры и содержимого БД в навигаторе и вывода результата запроса в читаемом виде чаще всего используются такие клиенты как DBeaver.
Ну что, поехали!

