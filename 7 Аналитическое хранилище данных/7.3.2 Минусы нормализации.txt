Минусы нормализации
Нормальные формы помогают избежать аномалий при обновлении, вставке и удалении данных. Однако у нормализации есть свои недостатки, и её нельзя рассматривать как универсальный способ организации данных. 
Вообще, инженеры данных — мастера в части компромиссов. На 100% идеальных решений не бывает, и инженерам всегда приходится искать наиболее подходящее для конкретных задач и требований. Далеко не всегда выбор падает на нормализацию, и вот почему:
Сложность проектирования.

В предыдущей теме вы могли заметить, что даже структурированные широкие таблицы нормализовать не так уж просто. А переход от неструктурированных или слабоструктурированных данных к строгим нормальным формам тем более требует сложного процесса проектирования и анализа.
Избыточность данных.

Стремление нормализовать модель данных может приводить к избыточности.

Во-первых, при высокой степени нормализации множатся сущности. Для соблюдения всех критериев нормальных форм одни и те же данные приходится хранить в нескольких местах.

Во-вторых, декомпозиция предполагает появление большого числа новых таблиц, а они занимают много места и требуют больших ресурсов для обработки. В этом отношении наиболее популярной является 3NF — в ней таблицы занимают минимальное место на диске, а работа с ними остаётся относительно простой.

Тем не менее времена, когда инженеры данных занимались нормализацией ради освобождения памяти, давно прошли. Появились алгоритмы сжатия, хорошо применимые для широких таблиц. К тому же, диски существенно подешевели. Да здравствует прогресс!
Проблемы с производительностью.

Из-за упомянутой выше избыточности данных и сложности выполнения запросов нормализация БД ведёт к снижению производительности. Некоторые операции (например, поиск или обновление данных) могут занимать больше времени и требовать больше ресурсов, потому что увеличивается количество операций объединения (JOIN), появляется необходимость построения индексов и обеспечения ограничений (CONSTRAINT) для таблиц, а переиндексация в свою очередь ведёт к блокировкам SELECT’ов.
Только не спешите ставить крест на нормализации! Реляционные модели данных и их нормальные формы подходят для хранения небольших датасетов с актуальными данными и их частого обновления. 
Если же данных очень много, лучше использовать другие структуры. Для повышения производительности они могут, наоборот, быть денормализованными. Также важно, чтобы они были приспособлены для хранения исторических данных и выполнения на них аналитических запросов. Такими возможностями обладает DWH. Пришла пора вас с ним познакомить.


