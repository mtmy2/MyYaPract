Как правильно собрать требования
Перед выполнением любой задачи хорошо бы разобраться, что конкретно нужно сделать. Поэтому сбор требований — часть работы и инженера данных тоже. С этого этапа начинается проектирование хранилища в том числе. 
По большому счёту на этапе сбора требований вам нужно получить ответы на три ключевых вопроса:
Что должно быть сделано?
Где это должно быть сделано?
За какое время это должно быть сделано?
Ниже разберём каждый вопрос подробнее.
Что должно быть сделано
Ответ на этот вопрос часто называют Definition of Done (в пер. с англ. «критерии готовности»). Хороший DoD чётко описывает результат полностью выполненной задачи. Например: «В Metabase доступен график, показывающий динамику цен на нефть в рублях с марта по апрель 2021 года».
На иллюстрации разобрана приведённая выше формулировка DoD. Из неё понятно, где будут проверять результат (в Metabase), что получится в результате (график), что график должен отражать (динамику), что будет данными для графика (цены на нефть в рублях за конкретный период).
Формат DoD очень конкретен и позволяет спланировать выполнение задачи, отталкиваясь от конечного результата. Из примера DoD выше задача сразу понятна. Как она будет реализована — другой вопрос.
Ваши DoD не обязательно должны точь-в-точь повторять строение предложения из примера. Главное, чтобы описанный в DoD результат не оставлял вопросов. Важна не форма требований, а смысл. Всякий раз вам, как исполнителю, нужно понимать:
Кто и как будет принимать задачу.

Например, если заказчик — аналитик, то ему не нужно знать о том, что нового появилось в БД. Ему важен только график в Metabase. Поэтому нужно учитывать, что заказчик может работать с набором инструментов, отличным от вашего.
Какую проблему заказчика решает задача.

Допустим, заказчик сказал вам: «Мне в Metabase нужны цены на нефть». А для чего? Чтобы увидеть, в каком месяце была самая высокая цена? Или нужно понять какие-то закономерности и тенденции? А может, на самом деле цель — отследить связь между ценами на нефть и уровнем потребления пышек в Ленинградской области?

В каждом из этих случаев результат будет выглядеть по-разному, поэтому следует заранее уточнять, какой результат хочет получить заказчик. Об этом мы ещё не раз скажем в дальнейшем.
С какими данными вы будете иметь дело.

Существуют ли данные за нужный период или они были удалены? Или, может, по какой-то причине все данные по ценам на нефть компания хранит в йенах? Откуда тогда брать курсы валют? А вдруг сойдёт и в йенах? Нужно убедиться, что задача технически реализуема.
Потренируйтесь в формулировании DoD. Представьте, что вы инженер данных в компании, регистрирующей лягушек. Какая формулировка DoD от заказчика лучше всего раскрывает задачу?
На иллюстрации изображена таблица с разными видами лягушек. В первой строке — вид «Пухлые и зелёные». Во второй — вид «Худые и красные». В третьей — «Худые и зелёные».


Первого числа каждого месяца появляется файл <mm.yyyy>.csv с соотношением видов зарегистрированных за предыдущий месяц лягушек из справочника company_frogs.

По пути /company/frog/stats раз в месяц появляется файл <mm.yyyy>.csv с количеством зарегистрированных за месяц лягушек по видам.

Правильный ответ
По пути /company/frog/stats первого числа каждого месяца появляется файл <mm.yyyy>.csv с разделителем запятой и следующими полями: frog_type — вид лягушки, frog_count — количество лягушек данного вида, зарегистрированных за предыдущий месяц. Все возможные виды лягушек хранятся в справочнике company_frogs.
Из такого DoD понятно, что, где, когда и в каком виде должно появляться. Остаётся только спланировать реализацию.

По пути /company/frog/stats первого числа каждого месяца появляется файл <mm.yyyy>.csv с количеством зарегистрированных за предыдущий месяц лягушек по видам. Задача полностью сделана и поставлена в прод.
О чём ещё спросить заказчика
Сформулировать хороший DoD не так просто. В процессе может выясниться, что требования до конца не ясны даже заказчику. Вот несколько советов, что делать в такой ситуации:
Узнайте подробности о проблеме, которую нужно решить — с точки зрения заказчика. Что ему неудобно? Чего ему не хватает? Зная и проблему, и технические возможности, вы сможете вместе сформулировать требования.
Если заказчик не может с чем-то определиться, например, как принять задачу, предложите свой вариант. Мы рекомендуем пользоваться трекерами задач, так как договорённости в чатах или почте могут запросто потеряться. К тому же, с помощью трекера гораздо удобнее следить за выполнением договорённостей и собирать статистику по выполнению задачи.
Если вы столкнулись с тем, что никто не знает, что делать, — не берите эту задачу. Нет требований — нет результата. Адресуйте вопрос руководителю. Скорее всего, в такой ситуации нужна другая задача.
Так как мы говорим о работе с данными, можно сформулировать более конкретные вопросы: 
Какую структуру данных должен получить бизнес-пользователь в итоговой витрине?

Структура данных может представлять собой список метрик с названиями полей, типом данных и логикой их сбора.
Какая глубина данных необходима?

Термин «глубина данных» означает, за какой временной период собраны данные.
Как часто данные витрины должны обновляться?

Например, заказчик может ответить, что данные в витрине должны обновляться первого числа каждого месяца.
Где должна находиться структура данных?

Этим вопросом иногда пренебрегают, ведь заказчика чаще интересуют сами данные, а не правильная организация витрин в хранилище. В этой теме вы познакомитесь с разными архитектурами и моделями данных, а также узнаете, почему разные данные необходимо хранить в разных слоях. Пока же важно запомнить, что расположение данных — одно из входных требований к задаче.
Кому должна быть доступна витрина?

Данные могут иметь разную ценность и конфиденциальность. Некоторые данные нужно «скрыть», задав разные правила чтения и записи. Например, читать данные из витрины смогут одни пользователи, а вносить данные — другие. Если такие условия есть, обязательно добавьте их в требования.
Дополнительные условия.

Заказчик может, например, попросить, чтобы витрина данных содержала не всех пользователей, а только актуальных на текущий момент. Такие фильтры — важная часть требований к задаче.
Где это должно быть сделано
Всегда есть технические ограничения, связанные с архитектурой хранения и обработки данных, доступными инструментами и политикой компании. По сути, вы самостоятельно или внутри команды формируете требования к системам, которые будете использовать. 
Эти требования могут конфликтовать с изначальной постановкой задачи. Например, аналитики могут попросить данные за квартал по часам, но база данных компании хранит только по дням. Здесь две силы — бизнес и техника — должны договориться.
За какое время это должно быть сделано
Сроки — ещё один важный пункт, который стоит обговорить с заказчиком. Перед тем как соглашаться на работу, вам нужно оценить время на решение задачи со своей стороны. Если решение не укладывается в сроки, придётся либо взять больше времени, либо менять DoD, если задача срочная. 
Точно предсказать сроки всегда непросто. На время выполнения работы в первую очередь влияют утверждённый план решения и ваш опыт работы с подобными задачами. То есть вам нужно:
составить план решения задачи;
ответить себе, насколько каждый шаг плана вам знаком и сколько он, по вашему опыту, обычно занимает времени.
Определившись с этими моментами, можно сложить время, которое будет потрачено на каждый шаг, и добавить ещё немного — наверняка что-то пойдёт не так.
Теперь вы готовы собирать требования для хранилища! От Алисы, кстати, новое письмо.
Алиса
Всем ещё раз привет! Заказчик перенёс встречу на следующую неделю, так что у нас появилось время, чтобы разобраться в подходах к построению DWH. Меня это радует, потому что твёрдое знание подходов поможет задать точные вопросы и собрать полные требования на встрече. Материалы найдёте во вложении.

