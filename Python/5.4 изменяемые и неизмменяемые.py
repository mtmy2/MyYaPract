# Переменная jar_of_vegetables ссылается на значение 'Огурцы'.
# Это значение записано в определённой ячейке памяти.
jar_of_vegetables = 'Огурцы'  
print(jar_of_vegetables) 
# Вывод в терминал: Огурцы

# Данные, на которые ссылается переменная jar_of_vegetables, 
# всё ещё хранятся в памяти, и к ним можно обратиться вновь.

print(jar_of_vegetables)

# Печатаем ID ячейки памяти, на которую ссылается переменная jar_of_vegetables:
print('Идентификатор ячейки памяти:', id(jar_of_vegetables))


jar = 'Огурцы'
print('ID для jar:', id(jar))

# Переменная another_jar
# ссылается на переменную jar,
# которая ссылается на объект со значением 'Огурцы'.
another_jar = jar

# А ещё одной переменной присвоим такое же значение, как и первой:
yet_another_jar = 'Огурцы'

print('ID для another_jar:', id(another_jar))

print('ID для yet_another_jar:', id(yet_another_jar))


# Я создал переменную неизменяемого типа (кортеж).
mutable_test = (1, 2, 4, 5)
# Изменяю значение - добавляю элемент:
mutable_test = (1, 2, 3, 4, 5)
# Проверяю, что получилось:
print(mutable_test)

# Будет напечатано: (1, 2, 3, 4, 5)


# Список, в квадратных скобках.
mutable = ['Список - ', 'изменяемый', 'тип', 'данных']
# Кортеж, в круглых скобках.
immutable = ('Кортеж -', 'неизменяемый', 'тип', 'данных')

# Печатаем ID ячеек памяти:
print('Исходный ID для списка:', id(mutable))
print('Исходный ID для кортежа:', id(immutable)) 

# Изменяем значение для переменной типа list: значение элемента с индексом [3].
mutable[3] = None
# Напечатаем изменённый список и ID ячейки памяти:
print('Изменённый список:', mutable)
print('ID для изменённого списка:', id(mutable)) 

# Попробуем проделать ту же операцию с кортежем:
immutable[3] = None

# Напечатаем изменённый кортеж и ID ячейки памяти:
print('Изменённый кортеж:', immutable) 
print('ID для изменённого кортежа:', id(immutable)) 