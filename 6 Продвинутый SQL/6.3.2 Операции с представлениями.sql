Операции с представлениями
В предыдущем уроке вы узнали, зачем нужны представления, потренировались создавать их на основе запроса SELECT и разобрали синтаксис создания представления. В этом уроке вы продолжите изучать простые представления и рассмотрите синтаксис изменения и удаления представлений на примере уже знакомой по прошлому уроку таблицы clients. Продолжайте выполнять запросы из урока в своём клиенте DBeaver.
Таблица clients

Вспомните двух клиентов БД из предыдущего урока:
USER_INFO — отображает общие данные по клиенту. Доступ к: id, ФИО и телефону пользователя.
AUTHENTICATION — проверяет логин и пароль клиента. Доступ к: исключительно логину и паролю пользователя.
Примените команду CREATE VIEW и создайте два представления для этих клиентов — вы будете работать с ними в этом уроке:
v_clients_user_info — для клиентского сервиса USER_INFO,
v_clients_authentication — для сервиса идентификации AUTHENTICATION.

-- представление для клиента USER_INFO
CREATE VIEW v_clients_user_info AS
    SELECT
        id,
        fio,
        phone
    FROM clients;

-- представление для клиента AUTHENTICATION
CREATE VIEW v_clients_authentication AS
    SELECT
        login,
        password
    FROM clients; 
Изменяем представление
Изменить представление можно несколькими способами, в зависимости от задачи. Разберём подробнее, как это сделать.
Команда ALTER VIEW
Чтобы изменить ранее созданные представления, применяют команду DDL ALTER VIEW. 
Например, если клиента AUTHENTICATION переименовали в AUTHENTICATOR, логично переименовать и представление, которое использует этот клиент: v_clients_authentication в v_clients_authenticator.
Такой запрос поменяет имя представления:

ALTER VIEW имя_представления RENAME TO имя_нового_представления; 
Примените команду ALTER VIEW и поменяйте имя представления v_clients_authentication на v_clients_authenticator.

ALTER VIEW v_clients_authentication RENAME TO v_clients_authenticator; 
У команды ALTER VIEW есть свои ограничения. Подробно изучить возможности команды можно в официальной документации PostgreSQL.
Сочетание команд DROP VIEW и CREATE VIEW
Допустим, есть представление v_clients_user_info для клиента USER_INFO, и вам понадобилось добавить в это представление поле address. В этом случае команда ALTER VIEW не подойдёт, поскольку нужно изменить количество столбцов в представлении, а это через ALTER VIEW не сделать.
В такой ситуации можно пересоздать представление — сначала его удалить, а затем создать заново, последовательно применив команды DDL DROP VIEW и CREATE VIEW.
Чтобы просто удалить представление, применяют команду раздела DDL DROP VIEW — здесь всё просто, как с другими объектами. Вот её синтаксис:

DROP VIEW имя_представления;
-- чтобы избежать ошибки, если представление ещё не было создано
-- можно использовать IF EXISTS
DROP VIEW IF EXISTS имя_представления; 
Чтобы пересоздать представление, дополните команду DROP VIEW командой CREATE VIEW. Вот так:

DROP VIEW имя_представления;
CREATE VIEW имя_представления AS
    SELECT ... ; -- здесь подставьте новый запрос 
Представление — это абстрактный объект, и его можно пересоздавать сколько угодно раз без потери данных. Удалить таблицу, а потом создать её заново без потерь не получится: все данные из таблицы будут удалены из БД. С представлением же логика другая. 
Для представления v_clients_user_info запрос на его пересоздание будет таким:

DROP VIEW v_clients_user_info;
CREATE VIEW v_clients_user_info AS
    SELECT
        id,
        fio,
        phone,
        address
    FROM clients;
 
Команда CREATE OR REPLACE VIEW
Для создания нового и переопределения (замены) существующего представления используют команду DDL CREATE OR REPLACE VIEW. Вот её синтаксис:

CREATE OR REPLACE VIEW имя_представления AS
    SELECT ... ; -- здесь запрос 
Логика команды такая: 
если представление ещё не создано — оно создаётся;
если представление уже создано — переопределяется запрос SELECT, на основе которого это представление было создано.
Обратите внимание, что при создании представления синтаксис IF NOT EXISTS не предусмотрен. По сути CREATE OR REPLACE заменяет его. Вместо запроса «создай, если не существует» появился запрос «создай или переопредели существующий».
Примените команду CREATE OR REPLACE VIEW, чтобы изменить уже созданное представление v_clients_user_info и добавить дополнительно поле additional_field.

CREATE OR REPLACE VIEW v_clients_user_info AS
    SELECT
        id,
        fio,
        phone,
        address,
        fio || phone || address AS additional_field
    FROM clients; 
У этой команды, как у ALTER VIEW, есть свои ограничения. Если вы решите уже после переопределения убрать добавленное поле additional_field и откатить все изменения:

CREATE OR REPLACE VIEW v_clients_user_info AS
    SELECT
        id,
        fio,
        phone,
        address
    FROM clients; 
Появится ошибка:
SQL Error [42P16]: ERROR: cannot drop columns from view 
Если вам нужно переопределить SELECT-запрос представления — команду CREATE OR REPLACE VIEW применять можно, но с ограничениями. Новый запрос должен выдавать те же столбцы, что выдавал предыдущий: имена и типы данных столбцов в старом и новом запросе должны совпадать, а сами столбцы следовать друг за другом в том же порядке. При этом можно добавить несколько новых столбцов в конце списка или поменять алгоритм вычисления значений для уже существующих столбцов.
Подробнее изучить команду CREATE OR REPLACE VIEW и её синтаксис можно в официальной документации PostgreSQL.
Вы узнали, как создавать, удалять и изменять представления с помощью команд CREATE VIEW, CREATE OR REPLACE VIEW, DROP VIEW и ALTER VIEW. Теперь потренируйтесь создавать, изменять и удалять представления в тренажёре.


