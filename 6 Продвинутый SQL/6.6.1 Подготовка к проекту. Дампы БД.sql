Подготовка к проекту. Дампы БД
Впереди финишная прямая спринта, а заодно и всего модуля SQL — проект. Ранее в курсе вы работали с тренажёром или выполняли задания локально. Чтобы выполнить проект, вам потребуется кое-что новое — развернуть заранее подготовленную схему с данными. Если вы уже умеете это делать, можете пролистывать урок и переходить к проекту. Если ещё не умеете, то в конце урока научитесь. 
Сначала мы подробнее расскажем о дампах и работе с ними. 
Любую базу данных или её часть можно представить в виде дампа — директории с набором файлов или специального файла. В нашем курсе дампы будут представлены в виде файлов, поэтому дальше мы будем говорить именно о таком варианте. 
Дампы используют для разных задач. 
Резервное копирование данных. В этом случае обычно на сервере настраивается автоматическая задача, которая создаёт дамп БД, схемы или отдельной таблицы в каждый заданный интервал времени, например, каждый день или каждые четыре часа. При этом сама база продолжает работать в обычном режиме, останавливать её или ограничивать в работе не нужно. Несколько последних дампов хранятся на жёстком диске или пересылаются в другое хранилище. Более старые дампы регулярно удаляются, сроки зависят от политики хранения бэкапов, принятой в компании.

Если актуальные данные в рабочей БД необратимо испорчены в результате какой-то ошибки или злонамеренных действий, можно восстановить данные из бэкапа.
Отладка программы. В практике разработчика дампы бывают полезны, когда надо перенести данные из какой-то базы на локальную машину, чтобы попробовать воспроизвести баг, который не проявляется на других данных.
Первичное заполнение локальной БД. Это делается для более комфортной разработки, когда все необходимые данные уже есть в базе, и её не нужно заполнять тестовыми данными вручную или ещё каким-то образом.
Виды дампов
Принципиально все дампы делятся на две большие категории: дампы в текстовом формате и дампы в архивных форматах. 
Текстовый формат. Такой дамп может быть прочитан как текстовый файл. Он представляет собой последовательный набор SQL-команд (скрипт), выполнив которые можно получить исходную БД или её объекты. Такие файлы похожи на части кода для создания таблиц и заполнения их данными, которые вы видели в уроках. Обычно у дампов в этом формате расширение файла указывается как .sql. Однако такое расширение не гарантирует, что дамп создан именно в текстовом формате.

Дампы в текстовом формате можно переносить и на другие СУБД, хотя при этом иногда нужно корректировать некоторые SQL-запросы.
Архивные форматы. Дамп в этом формате занимает меньше места, однако его уже нельзя использовать для других СУБД. В некоторых архивных форматах можно указывать, в каком порядке следует разворачивать объекты БД. Некоторые архивные форматы поддерживают многопоточную выгрузку данных, что ускоряет процесс развёртывания.
Можно создать дамп в любом формате, выбор зависит от конкретной БД и дальнейшего использования дампа. Текстовый формат можно использовать на других СУБД и его проще провалидировать: можно открыть и просмотреть визуально. Архивный формат занимает меньше места и быстрее разворачивается. 
В нашем проекте дампы будут представлены в архивном формате. 
Прочитать подробнее про создание дампа можно под катом.
Создание дампа

Восстановление БД из дампа
Способ восстановления дампа зависит от его формата. 
Для текстового формата нужно использовать уже знакомую вам утилиту psql. При запуске программы необходимо указать имя файла с дампом после ключа -f или --file. Тогда psql выполнит все команды, которые находятся в данном файле. 
В прошлом спринте вы подключались к БД с помощью psql. Чтобы развернуть дамп в вашей учебной базе данных, используйте тот же способ и параметры для подключения к БД. К команде добавьте -f  и имя файла, в котором лежит дамп, вот так:

psql -h host -p port -U username -d dbname -f file.sql

Пример: psql -h rwyy1hhf.mdb.yandexcloud.net -p 5432 -U de_student -d db_112 -f backup.sql 
При помощи опции -d указывается имя предварительно созданной базы, в которую производится развёртывание. По умолчанию развёртывание производится в базу, название которой совпадает с именем пользователя. 
Можно включить команду на создание БД непосредственно в дамп. В этом случае при открытии дампа появится команда CREATE DATABASE. Например, если база называется db_for_dump, то при развёртывании будет выполнена попытка создать такую базу и выполнить развёртывание в неё.
Для архивного формата можно использовать либо утилиту командной строки pg_restore, либо графический интерфейс менеджера БД, например, DBeaver. Подробности по использованию pg_restore приведены в документации. Рассмотрим подробнее, как восстановить дамп архивного формата при помощи DBeaver.
Сначала нужно выбрать базу, в которую необходимо осуществить развёртывание дампа, или создать новую БД. 
Затем нужно щёлкнуть правой кнопкой мыши в Навигаторе на нужную базу и выбрать Инструменты (Tools), а затем пункт Восстановить (Restore).
В появившемся диалоговом окне необходимо выбрать файл с дампом в поле Файл резерва.
Скриншот диалогового окна.
Тут есть ряд дополнительных опций, например, удалить существующие данные или создать новую базу данных.
Развёртывание дампа для проекта
Дамп базы данных для финального проекта создан в архивном формате. Вы сможете скачать его перед выполнением задания. Советуем воспользоваться вариантом развёртывания через DBeaver. Для этого достаточно: 
Щёлкнуть правой кнопкой мыши на базу и выбрать Инструменты → Восстановить.
В диалоговом окне выбрать скачанный файл с данными.
Все остальные настройки оставить по умолчанию.