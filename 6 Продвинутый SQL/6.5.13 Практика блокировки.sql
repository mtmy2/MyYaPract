1.
Большая часть заказов собрана и вот-вот будет выдана курьерам. Но в стоимость доставки некоторых заказов закралась ошибка: доставка для заказов суммой меньше 1000 рублей должна стоить 500 рублей, а не 0. Пока менеджер не исправит ошибку, нужно ограничить доступ к данным, чтобы заказы не доставлялись бесплатно. 
Напишите и выполните запрос с блокировкой, который исправит ошибку и не позволит никому прочитать некорректные данные, пока их не исправят.

BEGIN;
LOCK TABLE tasty.orders; 

update tasty.orders
set delivery_price = 500
where amount < 1000;

commit;


2.
Менеджеру по работе с клиентами поступила задача от начальства: клиенту с client_id = 4, который выиграл в розыгрыше промокодов, сделать скидку 20% на каждый второй товар во всех уже сделанных, но ещё недоставленных заказах. 
Для этого менеджеру сначала придётся пересчитать вручную стоимость каждого заказа этого клиента и только потом обновить данные в таблице orders. Важно, чтобы за это время никто не изменил эти заказы, но при этом другие заказы должны оставаться доступными для просмотра и изменения.
После того, как менеджер провел расчеты, он обновил стоимость заказа с id = 8 на 6500, а с id = 13 на 9440.
Напишите и выполните все запросы, которые использовал менеджер, чтобы добиться нужного результата.


BEGIN;

SELECT * 
FROM tasty.orders 
WHERE client_id = 4
FOR key SHARE; 

update tasty.orders
set amount = 6500
where id = 8;

update tasty.orders
set amount = 9440
where id = 13;

commit;

